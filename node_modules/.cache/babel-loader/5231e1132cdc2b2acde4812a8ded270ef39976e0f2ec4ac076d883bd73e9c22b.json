{"ast":null,"code":"var _jsxFileName = \"/home/hridya/Downloads/react-app/src/components/OptimisticNameUpdater.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useOptimistic } from 'react-dom';\n\n// Simple async function to simulate name update\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function mockUpdateName(newName) {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(newName); // Simulate a successful update\n    }, 1000); // Simulate network delay\n  });\n}\nfunction OptimisticNameUpdater({\n  initialName\n}) {\n  _s();\n  // useOptimistic initializes with the initialName and provides a function to set a new optimistic state\n  const [optimisticName, setOptimisticName] = useOptimistic(initialName);\n\n  // Function to handle form submission\n  const handleSubmit = async event => {\n    event.preventDefault(); // Prevent default form submission behavior\n    const newName = event.target.elements.name.value; // Get the new name from the input field\n\n    // Set the optimistic state to the new name\n    setOptimisticName(newName);\n\n    // Perform the async operation to update the name\n    await mockUpdateName(newName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your name is: \", optimisticName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"New Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), \"  \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(OptimisticNameUpdater, \"WalpDTBOie7alveKsruIpXNxc8o=\", false, function () {\n  return [useOptimistic];\n});\n_c = OptimisticNameUpdater;\nexport default OptimisticNameUpdater;\nvar _c;\n$RefreshReg$(_c, \"OptimisticNameUpdater\");","map":{"version":3,"names":["React","useOptimistic","jsxDEV","_jsxDEV","mockUpdateName","newName","Promise","resolve","setTimeout","OptimisticNameUpdater","initialName","_s","optimisticName","setOptimisticName","handleSubmit","event","preventDefault","target","elements","name","value","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/home/hridya/Downloads/react-app/src/components/OptimisticNameUpdater.js"],"sourcesContent":["import React from 'react';\nimport { useOptimistic } from 'react-dom';\n\n// Simple async function to simulate name update\nasync function mockUpdateName(newName) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(newName);  // Simulate a successful update\n    }, 1000);  // Simulate network delay\n  });\n}\n\nfunction OptimisticNameUpdater({ initialName }) {\n  // useOptimistic initializes with the initialName and provides a function to set a new optimistic state\n  const [optimisticName, setOptimisticName] = useOptimistic(initialName);\n\n  // Function to handle form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault();  // Prevent default form submission behavior\n    const newName = event.target.elements.name.value;  // Get the new name from the input field\n\n    // Set the optimistic state to the new name\n    setOptimisticName(newName);\n\n    // Perform the async operation to update the name\n    await mockUpdateName(newName);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <p>Your name is: {optimisticName}</p>  {/* Display the current optimistic name */}\n      <label>\n        New Name:\n        <input type=\"text\" name=\"name\" />\n      </label>\n      <button type=\"submit\">Update Name</button>  {/* Submit the form */}\n    </form>\n  );\n}\n\nexport default OptimisticNameUpdater;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,WAAW;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAeC,cAAcA,CAACC,OAAO,EAAE;EACrC,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC9BC,UAAU,CAAC,MAAM;MACfD,OAAO,CAACF,OAAO,CAAC,CAAC,CAAE;IACrB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAE;EACb,CAAC,CAAC;AACJ;AAEA,SAASI,qBAAqBA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAC9C;EACA,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,aAAa,CAACS,WAAW,CAAC;;EAEtE;EACA,MAAMI,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC,CAAE;IACzB,MAAMX,OAAO,GAAGU,KAAK,CAACE,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,CAAE;;IAEnD;IACAP,iBAAiB,CAACR,OAAO,CAAC;;IAE1B;IACA,MAAMD,cAAc,CAACC,OAAO,CAAC;EAC/B,CAAC;EAED,oBACEF,OAAA;IAAMkB,QAAQ,EAAEP,YAAa;IAAAQ,QAAA,gBAC3BnB,OAAA;MAAAmB,QAAA,GAAG,gBAAc,EAACV,cAAc;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,MAAE,eACvCvB,OAAA;MAAAmB,QAAA,GAAO,WAEL,eAAAnB,OAAA;QAAOwB,IAAI,EAAC,MAAM;QAACR,IAAI,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACRvB,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,MAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEX;AAACf,EAAA,CA1BQF,qBAAqB;EAAA,QAEgBR,aAAa;AAAA;AAAA2B,EAAA,GAFlDnB,qBAAqB;AA4B9B,eAAeA,qBAAqB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/hridya/Downloads/react-app/src/components/RefComponent.js\",\n  _s = $RefreshSig$();\n//for direct dom manipulation.\n//before react 19 forwardref was used.\nimport React, { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RefComponent() {\n  _s();\n  //  initializing a ref object with useref and giving value null\n  const inputRef = useRef(null);\n  const handleButtonClick = () => {\n    // Use the ref to access the input element and focus it\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Type something...\",\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: \"Focus the input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(RefComponent, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n_c = RefComponent;\nexport default RefComponent;\n// allows to keep a value , before re rendering.\nvar _c;\n$RefreshReg$(_c, \"RefComponent\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","RefComponent","_s","inputRef","handleButtonClick","current","focus","children","placeholder","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/hridya/Downloads/react-app/src/components/RefComponent.js"],"sourcesContent":["//for direct dom manipulation.\n//before react 19 forwardref was used.\nimport React, { useRef } from 'react';\n\nfunction RefComponent() {\n  //  initializing a ref object with useref and giving value null\n  const inputRef = useRef(null);\n\n  const handleButtonClick = () => {\n    // Use the ref to access the input element and focus it\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  return (\n    <div>\n      {/* Pass the ref to the input element */}\n      <input placeholder=\"Type something...\" ref={inputRef} />\n      <button onClick={handleButtonClick}>Focus the input</button>\n    </div>\n  );\n}\n\nexport default RefComponent;\n// allows to keep a value , before re rendering."],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB;EACA,MAAMC,QAAQ,GAAGL,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACA,IAAID,QAAQ,CAACE,OAAO,EAAE;MACpBF,QAAQ,CAACE,OAAO,CAACC,KAAK,CAAC,CAAC;IAC1B;EACF,CAAC;EAED,oBACEN,OAAA;IAAAO,QAAA,gBAEEP,OAAA;MAAOQ,WAAW,EAAC,mBAAmB;MAACC,GAAG,EAAEN;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxDb,OAAA;MAAQc,OAAO,EAAEV,iBAAkB;MAAAG,QAAA,EAAC;IAAe;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEV;AAACX,EAAA,CAlBQD,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAoBrB,eAAeA,YAAY;AAC3B;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
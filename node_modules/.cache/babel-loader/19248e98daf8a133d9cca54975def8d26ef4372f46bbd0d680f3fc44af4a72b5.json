{"ast":null,"code":"var _jsxFileName = \"/home/hridya/Downloads/react-app/src/components/SimpleNameUpdater.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useOptimistic } from 'react-dom';\n\n// Dummy async function to simulate name update\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function mockUpdateName(newName) {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(newName); // Resolve with the new name after 1 second\n    }, 1000); // Simulate network delay\n  });\n}\nfunction SimpleNameUpdater({\n  initialName\n}) {\n  _s();\n  const [optimisticName, setOptimisticName] = useOptimistic(initialName); // Initialize with the initial name\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // Prevent default form submission\n    const newName = event.target.elements.name.value; // Get the new name from the form\n\n    setOptimisticName(newName); // Update optimistic name\n\n    await mockUpdateName(newName); // Simulate an API call to update the name\n    // Note: No error handling for simplicity\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Name: \", optimisticName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"New Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(SimpleNameUpdater, \"WalpDTBOie7alveKsruIpXNxc8o=\", false, function () {\n  return [useOptimistic];\n});\n_c = SimpleNameUpdater;\nexport default SimpleNameUpdater;\nvar _c;\n$RefreshReg$(_c, \"SimpleNameUpdater\");","map":{"version":3,"names":["React","useOptimistic","jsxDEV","_jsxDEV","mockUpdateName","newName","Promise","resolve","setTimeout","SimpleNameUpdater","initialName","_s","optimisticName","setOptimisticName","handleSubmit","event","preventDefault","target","elements","name","value","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/home/hridya/Downloads/react-app/src/components/SimpleNameUpdater.js"],"sourcesContent":["import React from 'react';\nimport { useOptimistic } from 'react-dom';\n\n// Dummy async function to simulate name update\nasync function mockUpdateName(newName) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(newName); // Resolve with the new name after 1 second\n    }, 1000); // Simulate network delay\n  });\n}\n\nfunction SimpleNameUpdater({ initialName }) {\n  const [optimisticName, setOptimisticName] = useOptimistic(initialName); // Initialize with the initial name\n\n  const handleSubmit = async (event) => {\n    event.preventDefault(); // Prevent default form submission\n    const newName = event.target.elements.name.value; // Get the new name from the form\n\n    setOptimisticName(newName); // Update optimistic name\n\n    await mockUpdateName(newName); // Simulate an API call to update the name\n    // Note: No error handling for simplicity\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <p>Current Name: {optimisticName}</p>\n      <label>\n        New Name:\n        <input type=\"text\" name=\"name\" />\n      </label>\n      <button type=\"submit\">Update Name</button>\n    </form>\n  );\n}\n\nexport default SimpleNameUpdater;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,WAAW;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAeC,cAAcA,CAACC,OAAO,EAAE;EACrC,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC9BC,UAAU,CAAC,MAAM;MACfD,OAAO,CAACF,OAAO,CAAC,CAAC,CAAC;IACpB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC;AACJ;AAEA,SAASI,iBAAiBA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,aAAa,CAACS,WAAW,CAAC,CAAC,CAAC;;EAExE,MAAMI,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;IACxB,MAAMX,OAAO,GAAGU,KAAK,CAACE,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC;;IAElDP,iBAAiB,CAACR,OAAO,CAAC,CAAC,CAAC;;IAE5B,MAAMD,cAAc,CAACC,OAAO,CAAC,CAAC,CAAC;IAC/B;EACF,CAAC;EAED,oBACEF,OAAA;IAAMkB,QAAQ,EAAEP,YAAa;IAAAQ,QAAA,gBAC3BnB,OAAA;MAAAmB,QAAA,GAAG,gBAAc,EAACV,cAAc;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCvB,OAAA;MAAAmB,QAAA,GAAO,WAEL,eAAAnB,OAAA;QAAOwB,IAAI,EAAC,MAAM;QAACR,IAAI,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACRvB,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEX;AAACf,EAAA,CAvBQF,iBAAiB;EAAA,QACoBR,aAAa;AAAA;AAAA2B,EAAA,GADlDnB,iBAAiB;AAyB1B,eAAeA,iBAAiB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
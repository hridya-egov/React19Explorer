{"ast":null,"code":"var _jsxFileName = \"/home/hridya/Downloads/react-app/src/components/TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useOptimistic } from 'react-use';\n\n// Mock API function to add a new todo item\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockAddTodo = todo => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (Math.random() > 0.5) {\n        // Simulate a 50% chance of failure\n        resolve(todo); // Resolve with the new todo item\n      } else {\n        reject(new Error('Failed to add todo'));\n      }\n    }, 1000); // Simulate a 1-second delay\n  });\n};\n\n// TodoList component\nexport default function TodoList() {\n  _s();\n  const [newTodo, setNewTodo] = useState('');\n  const [todos, setTodos] = useState(['Buy groceries', 'Walk the dog']);\n\n  // useOptimistic hook for optimistic updates\n  const [optimisticTodos, addTodo] = useOptimistic(todos, newTodo => {\n    // Add new todo optimistically\n    const updatedTodos = [...todos, newTodo];\n    setTodos(updatedTodos);\n\n    // Simulate API request\n    mockAddTodo(newTodo).then(() => {\n      console.log('Todo added successfully!');\n    }).catch(error => {\n      console.error(error);\n      // Rollback to the previous state if the API request fails\n      addTodo(todos);\n    });\n  }, rollback => {\n    // Rollback to the previous state if the request fails\n    setTodos(rollback);\n  });\n  const handleAddTodo = () => {\n    if (newTodo.trim()) {\n      addTodo(newTodo);\n      setNewTodo(''); // Clear the input field\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: optimisticTodos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: todo\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTodo,\n      onChange: e => setNewTodo(e.target.value),\n      placeholder: \"Add a new todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"Nph77nH1lOZGapWrOxEgFBteXtM=\", false, function () {\n  return [useOptimistic];\n});\n_c = TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useOptimistic","jsxDEV","_jsxDEV","mockAddTodo","todo","Promise","resolve","reject","setTimeout","Math","random","Error","TodoList","_s","newTodo","setNewTodo","todos","setTodos","optimisticTodos","addTodo","updatedTodos","then","console","log","catch","error","rollback","handleAddTodo","trim","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/hridya/Downloads/react-app/src/components/TodoList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useOptimistic } from 'react-use';\n\n// Mock API function to add a new todo item\nconst mockAddTodo = (todo) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (Math.random() > 0.5) {  // Simulate a 50% chance of failure\n        resolve(todo);  // Resolve with the new todo item\n      } else {\n        reject(new Error('Failed to add todo'));\n      }\n    }, 1000);  // Simulate a 1-second delay\n  });\n};\n\n// TodoList component\nexport  default function TodoList() {\n  const [newTodo, setNewTodo] = useState('');\n  const [todos, setTodos] = useState(['Buy groceries', 'Walk the dog']);\n  \n  // useOptimistic hook for optimistic updates\n  const [optimisticTodos, addTodo] = useOptimistic(todos, (newTodo) => {\n    // Add new todo optimistically\n    const updatedTodos = [...todos, newTodo];\n    setTodos(updatedTodos);\n\n    // Simulate API request\n    mockAddTodo(newTodo)\n      .then(() => {\n        console.log('Todo added successfully!');\n      })\n      .catch((error) => {\n        console.error(error);\n        // Rollback to the previous state if the API request fails\n        addTodo(todos);\n      });\n  }, (rollback) => {\n    // Rollback to the previous state if the request fails\n    setTodos(rollback);\n  });\n\n  const handleAddTodo = () => {\n    if (newTodo.trim()) {\n      addTodo(newTodo);\n      setNewTodo('');  // Clear the input field\n    }\n  };\n\n  return (\n    <div>\n      <h1>Todo List</h1>\n      <ul>\n        {optimisticTodos.map((todo, index) => (\n          <li key={index}>{todo}</li>\n        ))}\n      </ul>\n      <input\n        type=\"text\"\n        value={newTodo}\n        onChange={(e) => setNewTodo(e.target.value)}\n        placeholder=\"Add a new todo\"\n      />\n      <button onClick={handleAddTodo}>Add Todo</button>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
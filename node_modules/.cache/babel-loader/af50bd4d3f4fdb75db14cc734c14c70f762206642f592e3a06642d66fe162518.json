{"ast":null,"code":"var _jsxFileName = \"/home/hridya/Downloads/react-app/src/components/UseCallbackComponent.js\",\n  _s = $RefreshSig$();\n//usecallback hook\nimport React, { useState, useCallback } from 'react';\n\n// button component that accepts a callback\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = /*#__PURE__*/React.memo(_c = ({\n  onClick\n}) => {\n  console.log('Button re-rendered');\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: \"Increment\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Button;\nfunction UseCallbackComponent() {\n  _s();\n  const [count, setCount] = useState(0);\n\n  // Memoize the increment function using useCallback\n  const increment = useCallback(() => {\n    setCount(prevCount => prevCount + 1);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: increment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(UseCallbackComponent, \"/aoX4znFqoWvnYxlxwV5UDyQlhg=\");\n_c3 = UseCallbackComponent;\nexport default UseCallbackComponent;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Button$React.memo\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"UseCallbackComponent\");","map":{"version":3,"names":["React","useState","useCallback","jsxDEV","_jsxDEV","Button","memo","_c","onClick","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","UseCallbackComponent","_s","count","setCount","increment","prevCount","_c3","$RefreshReg$"],"sources":["/home/hridya/Downloads/react-app/src/components/UseCallbackComponent.js"],"sourcesContent":["//usecallback hook\nimport React, { useState, useCallback } from 'react';\n\n// button component that accepts a callback\nconst Button = React.memo(({ onClick }) => {\n  console.log('Button re-rendered');\n  return <button onClick={onClick}>Increment</button>;\n});\n\nfunction UseCallbackComponent() {\n  const [count, setCount] = useState(0);\n\n  // Memoize the increment function using useCallback\n  const increment = useCallback(() => {\n    setCount((prevCount) => prevCount + 1);\n  }, []);\n\n  return (\n    <div>\n      <h1>Count: {count}</h1>\n      <Button onClick={increment} />\n    </div>\n  );\n}\n\nexport default UseCallbackComponent;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,gBAAGL,KAAK,CAACM,IAAI,CAAAC,EAAA,GAACA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EACzCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACjC,oBAAON,OAAA;IAAQI,OAAO,EAAEA,OAAQ;IAAAG,QAAA,EAAC;EAAS;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AACrD,CAAC,CAAC;AAACC,GAAA,GAHGX,MAAM;AAKZ,SAASY,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;;EAErC;EACA,MAAMoB,SAAS,GAAGnB,WAAW,CAAC,MAAM;IAClCkB,QAAQ,CAAEE,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,GAAI,SAAO,EAACQ,KAAK;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBX,OAAA,CAACC,MAAM;MAACG,OAAO,EAAEa;IAAU;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV;AAACG,EAAA,CAdQD,oBAAoB;AAAAM,GAAA,GAApBN,oBAAoB;AAgB7B,eAAeA,oBAAoB;AAAC,IAAAV,EAAA,EAAAS,GAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAR,GAAA;AAAAQ,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
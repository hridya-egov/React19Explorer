{"ast":null,"code":"var _jsxFileName = \"/home/hridya/Downloads/react-app/src/components/Greeting.js\";\n//usehook\n//rendering suspended until a promise is resolved.\n//allows to wait for the data to be available before rendering, component rendered when all the data is available.\nimport React from 'react';\nimport { use } from 'react';\n\n// Simulate an async function to fetch a greeting message\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchGreeting = () => new Promise(resolve => setTimeout(() => resolve(' React 19'), 1000) // Resolve after 1 second\n);\n\n// Create a promise for the greeting data\nconst greetingPromise = fetchGreeting();\nfunction Greeting() {\n  // Using the use hook to suspend until `greetingPromise` resolves\n  const greeting = use(greetingPromise);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: greeting\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, this); // Render the greeting message\n}\n_c = Greeting;\nexport default Greeting;\n//why? react automatically handles the loading state\nvar _c;\n$RefreshReg$(_c, \"Greeting\");","map":{"version":3,"names":["React","use","jsxDEV","_jsxDEV","fetchGreeting","Promise","resolve","setTimeout","greetingPromise","Greeting","greeting","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/hridya/Downloads/react-app/src/components/Greeting.js"],"sourcesContent":["//usehook\n//rendering suspended until a promise is resolved.\n//allows to wait for the data to be available before rendering, component rendered when all the data is available.\nimport React from 'react';\nimport { use } from 'react';\n\n// Simulate an async function to fetch a greeting message\nconst fetchGreeting = () => \n  new Promise((resolve) => \n    setTimeout(() => resolve(' React 19'), 1000) // Resolve after 1 second\n  );\n\n// Create a promise for the greeting data\nconst greetingPromise = fetchGreeting();\n\nfunction Greeting() {\n  // Using the use hook to suspend until `greetingPromise` resolves\n  const greeting = use(greetingPromise);\n  return <h1>{greeting}</h1>; // Render the greeting message\n}\n\nexport default Greeting;\n//why? react automatically handles the loading state"],"mappings":";AAAA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,OAAO;;AAE3B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,GAAGA,CAAA,KACpB,IAAIC,OAAO,CAAEC,OAAO,IAClBC,UAAU,CAAC,MAAMD,OAAO,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,CAAC;AAC/C,CAAC;;AAEH;AACA,MAAME,eAAe,GAAGJ,aAAa,CAAC,CAAC;AAEvC,SAASK,QAAQA,CAAA,EAAG;EAClB;EACA,MAAMC,QAAQ,GAAGT,GAAG,CAACO,eAAe,CAAC;EACrC,oBAAOL,OAAA;IAAAQ,QAAA,EAAKD;EAAQ;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,CAAC,CAAC;AAC9B;AAACC,EAAA,GAJQP,QAAQ;AAMjB,eAAeA,QAAQ;AACvB;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
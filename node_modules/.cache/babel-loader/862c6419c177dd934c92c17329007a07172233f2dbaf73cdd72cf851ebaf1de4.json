{"ast":null,"code":"var _jsxFileName = \"/home/hridya/Downloads/react-app/src/components/ServerAction.js\";\n//server side data processing and interaction directly from components.\nimport React from 'react';\n\n// Define the Server Action ,process formdata and return the result\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport async function handleFormSubmit(formData) {\n  console.log('Server received form data:', formData);\n\n  // Simulate server processing and return a result\n  return {\n    success: true\n  };\n}\n\n// Server Component with a form that calls the Server Action\nexport default function ServerAction() {\n  async function submitForm(event) {\n    event.preventDefault(); //prevents default form submission behaviour\n    const formData = new FormData(event.target); //obj to collect form data from form element.\n    const data = Object.fromEntries(formData.entries());\n\n    // Call the Server Action\n    const result = await handleFormSubmit(data);\n    if (result.success) {\n      alert('Form submitted successfully!');\n    } else {\n      alert('Form submission failed.');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Server Action Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = ServerAction;\nvar _c;\n$RefreshReg$(_c, \"ServerAction\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","handleFormSubmit","formData","console","log","success","ServerAction","submitForm","event","preventDefault","FormData","target","data","Object","fromEntries","entries","result","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","name","type","placeholder","required","_c","$RefreshReg$"],"sources":["/home/hridya/Downloads/react-app/src/components/ServerAction.js"],"sourcesContent":["//server side data processing and interaction directly from components.\nimport React from 'react';\n\n// Define the Server Action ,process formdata and return the result\nexport async function handleFormSubmit(formData) {\n  console.log('Server received form data:', formData);\n\n  // Simulate server processing and return a result\n  return { success: true };\n}\n\n// Server Component with a form that calls the Server Action\nexport default function ServerAction() {\n  async function submitForm(event) {\n    event.preventDefault();//prevents default form submission behaviour\n    const formData = new FormData(event.target);//obj to collect form data from form element.\n    const data = Object.fromEntries(formData.entries());\n\n    // Call the Server Action\n    const result = await handleFormSubmit(data);\n\n    if (result.success) {\n      alert('Form submitted successfully!');\n    } else {\n      alert('Form submission failed.');\n    }\n  }\n\n  return (\n    <div>\n      <h1>Server Action Example</h1>\n      <form onSubmit={submitForm}>\n        <input name=\"name\" type=\"text\" placeholder=\"Enter your name\" required />\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,eAAeC,gBAAgBA,CAACC,QAAQ,EAAE;EAC/CC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,QAAQ,CAAC;;EAEnD;EACA,OAAO;IAAEG,OAAO,EAAE;EAAK,CAAC;AAC1B;;AAEA;AACA,eAAe,SAASC,YAAYA,CAAA,EAAG;EACrC,eAAeC,UAAUA,CAACC,KAAK,EAAE;IAC/BA,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC;IACvB,MAAMP,QAAQ,GAAG,IAAIQ,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,CAAC;IAC5C,MAAMC,IAAI,GAAGC,MAAM,CAACC,WAAW,CAACZ,QAAQ,CAACa,OAAO,CAAC,CAAC,CAAC;;IAEnD;IACA,MAAMC,MAAM,GAAG,MAAMf,gBAAgB,CAACW,IAAI,CAAC;IAE3C,IAAII,MAAM,CAACX,OAAO,EAAE;MAClBY,KAAK,CAAC,8BAA8B,CAAC;IACvC,CAAC,MAAM;MACLA,KAAK,CAAC,yBAAyB,CAAC;IAClC;EACF;EAEA,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BtB,OAAA;MAAMuB,QAAQ,EAAEhB,UAAW;MAAAW,QAAA,gBACzBlB,OAAA;QAAOwB,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,iBAAiB;QAACC,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxEtB,OAAA;QAAQyB,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACM,EAAA,GAzBuBtB,YAAY;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
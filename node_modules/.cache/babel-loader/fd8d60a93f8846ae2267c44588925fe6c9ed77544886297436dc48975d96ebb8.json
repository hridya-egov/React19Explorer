{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useOptimistic } from 'react-use';\n\n// // Mock API function to add a new todo item\n// const mockAddTodo = (todo) => {\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       if (Math.random() > 0.5) {  // Simulate a 50% chance of failure\n//         resolve(todo);  // Resolve with the new todo item\n//       } else {\n//         reject(new Error('Failed to add todo'));\n//       }\n//     }, 1000);  // Simulate a 1-second delay\n//   });\n// };\n\n// // TodoList component\n// export  default function TodoList() {\n//   const [newTodo, setNewTodo] = useState('');\n//   const [todos, setTodos] = useState(['Buy groceries', 'Walk the dog']);\n\n//   // useOptimistic hook for optimistic updates\n//   const [optimisticTodos, addTodo] = useOptimistic(todos, (newTodo) => {\n//     // Add new todo optimistically\n//     const updatedTodos = [...todos, newTodo];\n//     setTodos(updatedTodos);\n\n//     // Simulate API request\n//     mockAddTodo(newTodo)\n//       .then(() => {\n//         console.log('Todo added successfully!');\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//         // Rollback to the previous state if the API request fails\n//         addTodo(todos);\n//       });\n//   }, (rollback) => {\n//     // Rollback to the previous state if the request fails\n//     setTodos(rollback);\n//   });\n\n//   const handleAddTodo = () => {\n//     if (newTodo.trim()) {\n//       addTodo(newTodo);\n//       setNewTodo('');  // Clear the input field\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Todo List</h1>\n//       <ul>\n//         {optimisticTodos.map((todo, index) => (\n//           <li key={index}>{todo}</li>\n//         ))}\n//       </ul>\n//       <input\n//         type=\"text\"\n//         value={newTodo}\n//         onChange={(e) => setNewTodo(e.target.value)}\n//         placeholder=\"Add a new todo\"\n//       />\n//       <button onClick={handleAddTodo}>Add Todo</button>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["/home/hridya/Downloads/react-app/src/components/TodoList.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useOptimistic } from 'react-use';\n\n// // Mock API function to add a new todo item\n// const mockAddTodo = (todo) => {\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       if (Math.random() > 0.5) {  // Simulate a 50% chance of failure\n//         resolve(todo);  // Resolve with the new todo item\n//       } else {\n//         reject(new Error('Failed to add todo'));\n//       }\n//     }, 1000);  // Simulate a 1-second delay\n//   });\n// };\n\n// // TodoList component\n// export  default function TodoList() {\n//   const [newTodo, setNewTodo] = useState('');\n//   const [todos, setTodos] = useState(['Buy groceries', 'Walk the dog']);\n  \n//   // useOptimistic hook for optimistic updates\n//   const [optimisticTodos, addTodo] = useOptimistic(todos, (newTodo) => {\n//     // Add new todo optimistically\n//     const updatedTodos = [...todos, newTodo];\n//     setTodos(updatedTodos);\n\n//     // Simulate API request\n//     mockAddTodo(newTodo)\n//       .then(() => {\n//         console.log('Todo added successfully!');\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//         // Rollback to the previous state if the API request fails\n//         addTodo(todos);\n//       });\n//   }, (rollback) => {\n//     // Rollback to the previous state if the request fails\n//     setTodos(rollback);\n//   });\n\n//   const handleAddTodo = () => {\n//     if (newTodo.trim()) {\n//       addTodo(newTodo);\n//       setNewTodo('');  // Clear the input field\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Todo List</h1>\n//       <ul>\n//         {optimisticTodos.map((todo, index) => (\n//           <li key={index}>{todo}</li>\n//         ))}\n//       </ul>\n//       <input\n//         type=\"text\"\n//         value={newTodo}\n//         onChange={(e) => setNewTodo(e.target.value)}\n//         placeholder=\"Add a new todo\"\n//       />\n//       <button onClick={handleAddTodo}>Add Todo</button>\n//     </div>\n//   );\n// }\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}